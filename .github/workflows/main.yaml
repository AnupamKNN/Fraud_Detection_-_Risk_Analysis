name: Fraud Detection CI/CD Pipeline

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.10'

jobs:
  train_model:
    name: ü§ñ Train Model with MLflow
    runs-on: ubuntu-latest
    env:
      MONGO_DB_URL: ${{ secrets.MONGO_DB_URL }}
      MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
      MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
      MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run training pipeline
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          python src/fraud_detection/pipeline/training_pipeline.py

  build_image:
    name: üê≥ Build & Push to GHCR (Optional for local debug)
    runs-on: ubuntu-latest
    needs: train_model
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/anupamknn/fraud_detection_-_risk_analysis:latest

  deploy:
    name: üöÄ Deploy to Environment
    runs-on: ubuntu-latest
    needs: build_image
    steps:
      - name: Deployment Placeholder
        run: echo "Deploying to environment (K8s, ECS, etc.)..."
